import pyttsx3import datetimeimport speech_recognition as srengine = pyttsx3.init()voices = engine.getProperty('voices')engine.setProperty('voice', voices[0].id)rate = engine.getProperty('rate')engine.setProperty('rate', rate+5)def speak(audio):    engine.say(audio)    engine.runAndWait()def wishme():    hour = int(datetime.datetime.now().hour)    if hour >= 0 and hour < 12:        speak("Good Morning")    elif hour >= 12 and hour < 18:        speak("Good Afternoon")    else:        speak("Good Evening")    speak("I am Tony. How may I assist you today sir?")def takeCommand(recognizer, microphone):    if not isinstance(recognizer, sr.Recognizer):        raise TypeError('recognizer must be of type Recognizer')    if not isinstance(microphone, sr.Microphone):        raise TypeError('microphone must be Microphone instance')    with microphone as source:        recognizer.adjust_for_ambient_noise(source)        audio = recognizer.listen(source)if __name__ == '__main__':    wishme()    recognizer = sr.Recognizer()    mic = sr.Microphone(device_index=0)    response = takeCommand(recognizer, mic)